/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.swarmnet.shawn;

class ShawnJNI {
  public final static native double EPSILON_get();
  public final static native long new_RefcntPointable();
  public final static native void delete_RefcntPointable(long jarg1);
  public final static native void RefcntPointable_reference_counter__set(long jarg1, int jarg2);
  public final static native int RefcntPointable_reference_counter__get(long jarg1);
  public final static native long new_RefcntPointer_Tag__SWIG_0();
  public final static native long new_RefcntPointer_Tag__SWIG_1(long jarg1);
  public final static native long new_RefcntPointer_Tag__SWIG_2(long jarg1);
  public final static native void delete_RefcntPointer_Tag(long jarg1);
  public final static native boolean RefcntPointer_Tag_is_null(long jarg1);
  public final static native boolean RefcntPointer_Tag_is_not_null(long jarg1);
  public final static native long RefcntPointer_Tag___ref__(long jarg1);
  public final static native long RefcntPointer_Tag___deref__(long jarg1);
  public final static native long RefcntPointer_Tag_get(long jarg1);
  public final static native long RefcntPointer_Tag_assign__SWIG_0(long jarg1, long jarg2);
  public final static native long RefcntPointer_Tag_assign__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_lesserThan__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_lesserEqual__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_greaterThan__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_greaterEqual__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_equals__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_isDifferent__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_lesserThan__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_lesserEqual__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_greaterThan__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_greaterEqual__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_equals__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_Tag_isDifferent__SWIG_1(long jarg1, long jarg2);
  public final static native String RefcntPointer_Tag_name(long jarg1);
  public final static native boolean RefcntPointer_Tag_is_locked(long jarg1);
  public final static native void RefcntPointer_Tag_lock(long jarg1);
  public final static native void RefcntPointer_Tag_unlock(long jarg1);
  public final static native String RefcntPointer_Tag_type_identifier(long jarg1);
  public final static native String RefcntPointer_Tag_encoded_content(long jarg1);
  public final static native void RefcntPointer_Tag_set_persistency(long jarg1, boolean jarg2);
  public final static native boolean RefcntPointer_Tag_is_persistent(long jarg1);
  public final static native long RefcntPointer_Tag_begin_entries(long jarg1);
  public final static native long RefcntPointer_Tag_end_entries(long jarg1);
  public final static native void RefcntPointer_Tag_add_indexed_entry(long jarg1, String jarg2, String jarg3);
  public final static native void RefcntPointer_Tag_add_value_entry(long jarg1, String jarg2);
  public final static native void RefcntPointer_Tag_add_tag(long jarg1, long jarg2);
  public final static native void RefcntPointer_Tag_remove_tag(long jarg1, long jarg2);
  public final static native void RefcntPointer_Tag_remove_tag_by_name(long jarg1, String jarg2);
  public final static native void RefcntPointer_Tag_clear_tags(long jarg1);
  public final static native long RefcntPointer_Tag_find_tag(long jarg1, String jarg2);
  public final static native long RefcntPointer_Tag_find_tag_w(long jarg1, String jarg2);
  public final static native long RefcntPointer_Tag_begin_tags(long jarg1);
  public final static native long RefcntPointer_Tag_end_tags(long jarg1);
  public final static native long RefcntPointer_Tag_count_tags(long jarg1);
  public final static native void RefcntPointer_Tag_reference_counter__set(long jarg1, int jarg2);
  public final static native int RefcntPointer_Tag_reference_counter__get(long jarg1);
  public final static native long new_RefcntPointer_ConstTag__SWIG_0();
  public final static native long new_RefcntPointer_ConstTag__SWIG_1(long jarg1);
  public final static native long new_RefcntPointer_ConstTag__SWIG_2(long jarg1);
  public final static native void delete_RefcntPointer_ConstTag(long jarg1);
  public final static native boolean RefcntPointer_ConstTag_is_null(long jarg1);
  public final static native boolean RefcntPointer_ConstTag_is_not_null(long jarg1);
  public final static native long RefcntPointer_ConstTag___ref__(long jarg1);
  public final static native long RefcntPointer_ConstTag___deref__(long jarg1);
  public final static native long RefcntPointer_ConstTag_get(long jarg1);
  public final static native long RefcntPointer_ConstTag_assign__SWIG_0(long jarg1, long jarg2);
  public final static native long RefcntPointer_ConstTag_assign__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_lesserThan__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_lesserEqual__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_greaterThan__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_greaterEqual__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_equals__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_isDifferent__SWIG_0(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_lesserThan__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_lesserEqual__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_greaterThan__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_greaterEqual__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_equals__SWIG_1(long jarg1, long jarg2);
  public final static native boolean RefcntPointer_ConstTag_isDifferent__SWIG_1(long jarg1, long jarg2);
  public final static native String RefcntPointer_ConstTag_name(long jarg1);
  public final static native boolean RefcntPointer_ConstTag_is_locked(long jarg1);
  public final static native String RefcntPointer_ConstTag_type_identifier(long jarg1);
  public final static native String RefcntPointer_ConstTag_encoded_content(long jarg1);
  public final static native boolean RefcntPointer_ConstTag_is_persistent(long jarg1);
  public final static native long RefcntPointer_ConstTag_begin_entries(long jarg1);
  public final static native long RefcntPointer_ConstTag_end_entries(long jarg1);
  public final static native long RefcntPointer_ConstTag_find_tag(long jarg1, String jarg2);
  public final static native long RefcntPointer_ConstTag_begin_tags(long jarg1);
  public final static native long RefcntPointer_ConstTag_end_tags(long jarg1);
  public final static native long RefcntPointer_ConstTag_count_tags(long jarg1);
  public final static native int RefcntPointer_ConstTag_reference_counter__get(long jarg1);
  public final static native long new_TagContainer();
  public final static native void delete_TagContainer(long jarg1);
  public final static native void TagContainer_add_tag(long jarg1, long jarg2);
  public final static native void TagContainer_remove_tag(long jarg1, long jarg2);
  public final static native void TagContainer_remove_tag_by_name(long jarg1, String jarg2);
  public final static native void TagContainer_clear_tags(long jarg1);
  public final static native long TagContainer_find_tag(long jarg1, String jarg2);
  public final static native long TagContainer_find_tag_w(long jarg1, String jarg2);
  public final static native long TagContainer_begin_tags(long jarg1);
  public final static native long TagContainer_end_tags(long jarg1);
  public final static native long TagContainer_count_tags(long jarg1);
  public final static native void delete_IteratorData(long jarg1);
  public final static native void IteratorData_next(long jarg1);
  public final static native long IteratorData_clone(long jarg1);
  public final static native boolean IteratorData_has_index(long jarg1);
  public final static native String IteratorData_index(long jarg1);
  public final static native String IteratorData_value(long jarg1);
  public final static native boolean IteratorData_equals(long jarg1, long jarg2);
  public final static native long new_const_entry_iterator__SWIG_0();
  public final static native long new_const_entry_iterator__SWIG_1(long jarg1);
  public final static native long new_const_entry_iterator__SWIG_2(long jarg1);
  public final static native void delete_const_entry_iterator(long jarg1);
  public final static native String const_entry_iterator___ref__(long jarg1);
  public final static native long const_entry_iterator_increment(long jarg1);
  public final static native long const_entry_iterator_assign(long jarg1, long jarg2);
  public final static native boolean const_entry_iterator_equals(long jarg1, long jarg2);
  public final static native boolean const_entry_iterator_isDifferent(long jarg1, long jarg2);
  public final static native boolean const_entry_iterator_has_index(long jarg1);
  public final static native String const_entry_iterator_index(long jarg1);
  public final static native String const_entry_iterator_value(long jarg1);
  public final static native void delete_Tag(long jarg1);
  public final static native String Tag_name(long jarg1);
  public final static native boolean Tag_is_locked(long jarg1);
  public final static native void Tag_lock(long jarg1);
  public final static native void Tag_unlock(long jarg1);
  public final static native String Tag_type_identifier(long jarg1);
  public final static native String Tag_encoded_content(long jarg1);
  public final static native void Tag_set_persistency(long jarg1, boolean jarg2);
  public final static native boolean Tag_is_persistent(long jarg1);
  public final static native long Tag_begin_entries(long jarg1);
  public final static native long Tag_end_entries(long jarg1);
  public final static native void Tag_add_indexed_entry(long jarg1, String jarg2, String jarg3);
  public final static native void Tag_add_value_entry(long jarg1, String jarg2);
  public final static native void delete_TagSyncable(long jarg1);
  public final static native void TagSyncable_sync_to_tags(long jarg1, long jarg2);
  public final static native void TagSyncable_sync_from_tags(long jarg1, long jarg2);
  public final static native long new_Vec__SWIG_0(long jarg1);
  public final static native long new_Vec__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vec__SWIG_2(double jarg1, double jarg2);
  public final static native long new_Vec__SWIG_3(double jarg1);
  public final static native long new_Vec__SWIG_4();
  public final static native void delete_Vec(long jarg1);
  public final static native double Vec_x(long jarg1);
  public final static native double Vec_y(long jarg1);
  public final static native double Vec_z(long jarg1);
  public final static native long Vec_subtract(long jarg1, long jarg2);
  public final static native long Vec_add(long jarg1, long jarg2);
  public final static native long Vec_subtractAssign(long jarg1, long jarg2);
  public final static native long Vec_addAssign(long jarg1, long jarg2);
  public final static native long Vec_mult__SWIG_0(long jarg1, double jarg2);
  public final static native long Vec_div(long jarg1, double jarg2);
  public final static native long Vec_multAssign(long jarg1, double jarg2);
  public final static native long Vec_divAssign(long jarg1, double jarg2);
  public final static native boolean Vec_equals(long jarg1, long jarg2);
  public final static native boolean Vec_isDifferent(long jarg1, long jarg2);
  public final static native long Vec_assign(long jarg1, long jarg2);
  public final static native double Vec_mult__SWIG_1(long jarg1, long jarg2);
  public final static native double Vec_euclidean_norm(long jarg1);
  public final static native double euclidean_distance(long jarg1, long jarg2);
  public final static native long cross_product(long jarg1, long jarg2);
  public final static native void delete_NodeChangeListener(long jarg1);
  public final static native void NodeChangeListener_node_added(long jarg1, long jarg2);
  public final static native void NodeChangeListener_node_removed(long jarg1, long jarg2);
  public final static native void NodeChangeListener_id_changed(long jarg1, int jarg2, int jarg3);
  public final static native boolean NodeChangeListener_invalidate(long jarg1);
  public final static native void delete_KeeperManaged(long jarg1);
  public final static native String KeeperManaged_name(long jarg1);
  public final static native String KeeperManaged_description(long jarg1);
  public final static native void delete_SimulationTaskResult(long jarg1);
  public final static native String SimulationTaskResult_name(long jarg1);
  public final static native String SimulationTaskResult_description(long jarg1);
  public final static native void SimulationTaskResult_send_to(long jarg1, long jarg2);
  public final static native void delete_SimulationTask(long jarg1);
  public final static native void SimulationTask_run(long jarg1, long jarg2);
  public final static native long SimulationTask_begin_results(long jarg1);
  public final static native long SimulationTask_end_results(long jarg1);
  public final static native void delete_NodeMovement(long jarg1);
  public final static native void NodeMovement_init(long jarg1, long jarg2);
  public final static native void NodeMovement_init_from(long jarg1, long jarg2, long jarg3);
  public final static native boolean NodeMovement_set_position(long jarg1, long jarg2);
  public final static native long NodeMovement_position(long jarg1);
  public final static native long NodeMovement_velocity(long jarg1);
  public final static native String NodeMovement_name(long jarg1);
  public final static native int NodeMovement_simulation_round(long jarg1);
  public final static native double NodeMovement_current_time(long jarg1);
  public final static native long NodeMovement_world(long jarg1);
  public final static native long NodeMovement_world_w(long jarg1);
  public final static native long NodeMovement_node_w(long jarg1);
  public final static native long NodeMovement_node(long jarg1);
  public final static native long new_Message();
  public final static native void delete_Message(long jarg1);
  public final static native boolean Message_is_unicast(long jarg1);
  public final static native int Message_unicast_target(long jarg1);
  public final static native boolean Message_is_loopback_message(long jarg1);
  public final static native long Message_source(long jarg1);
  public final static native long Message_source_w(long jarg1);
  public final static native boolean Message_has_source(long jarg1);
  public final static native int Message_timestamp_simulation_round(long jarg1);
  public final static native double Message_timestamp_time(long jarg1);
  public final static native void Message_set_source(long jarg1, long jarg2);
  public final static native void Message_set_timestamp(long jarg1, int jarg2, double jarg3);
  public final static native int Message_size(long jarg1);
  public final static native void Message_setSize(long jarg1, int jarg2);
  public final static native long new_Processor();
  public final static native void delete_Processor(long jarg1);
  public final static native void Processor_set_owner(long jarg1, long jarg2);
  public final static native long Processor_owner(long jarg1);
  public final static native long Processor_owner_w(long jarg1);
  public final static native void Processor_special_boot(long jarg1);
  public final static native void Processor_boot(long jarg1);
  public final static native boolean Processor_process_message(long jarg1, long jarg2);
  public final static native void Processor_work(long jarg1);
  public final static native int Processor_id(long jarg1);
  public final static native int Processor_state(long jarg1);
  public final static native boolean Processor_auto_terminate(long jarg1);
  public final static native int Processor_simulation_round(long jarg1);
  public final static native void Processor_sync_to_tags(long jarg1, long jarg2);
  public final static native void Processor_sync_from_tags(long jarg1, long jarg2);
  public final static native long new_World();
  public final static native void delete_World(long jarg1);
  public final static native void World_init(long jarg1);
  public final static native void World_add_node(long jarg1, long jarg2);
  public final static native void World_remove_node(long jarg1, long jarg2);
  public final static native void World_add_default_processor(long jarg1, String jarg2);
  public final static native void World_set_edge_model(long jarg1, long jarg2);
  public final static native void World_set_transmission_model(long jarg1, long jarg2);
  public final static native void World_set_communication_model(long jarg1, long jarg2);
  public final static native long World_edge_model(long jarg1);
  public final static native long World_edge_model_w(long jarg1);
  public final static native long World_transmission_model(long jarg1);
  public final static native long World_transmission_model_w(long jarg1);
  public final static native long World_communication_model(long jarg1);
  public final static native long World_communication_model_w(long jarg1);
  public final static native void World_set_simulation_controller(long jarg1, long jarg2);
  public final static native long World_simulation_controller_w(long jarg1);
  public final static native long World_simulation_controller(long jarg1);
  public final static native void World_set_movement_controller(long jarg1, long jarg2);
  public final static native long World_movement_controller_w(long jarg1);
  public final static native long World_movement_controller(long jarg1);
  public final static native long World_lower_left(long jarg1);
  public final static native long World_upper_right(long jarg1);
  public final static native void World_add_edge(long jarg1, long jarg2, long jarg3);
  public final static native void World_clear(long jarg1);
  public final static native void World_set_size_hint(long jarg1, double jarg2);
  public final static native String World_uuid(long jarg1);
  public final static native int World_active_nodes_count(long jarg1);
  public final static native int World_sleeping_nodes_count(long jarg1);
  public final static native int World_inactive_nodes_count(long jarg1);
  public final static native boolean World_is_done(long jarg1);
  public final static native int World_simulation_round(long jarg1);
  public final static native double World_current_time(long jarg1);
  public final static native boolean World_has_size_hint(long jarg1);
  public final static native double World_size_hint(long jarg1);
  public final static native void World_step(long jarg1);
  public final static native void World_send_message(long jarg1, long jarg2, long jarg3);
  public final static native void World_reset(long jarg1);
  public final static native void World_add_node_change_listener(long jarg1, long jarg2);
  public final static native void World_remove_node_change_listener(long jarg1, long jarg2);
  public final static native boolean World_can_communicate_bidi(long jarg1, long jarg2, long jarg3);
  public final static native boolean World_can_communicate_uni(long jarg1, long jarg2, long jarg3);
  public final static native int World_node_count(long jarg1);
  public final static native int World_node_id_space_size(long jarg1);
  public final static native long World_begin_nodes_w(long jarg1);
  public final static native long World_end_nodes_w(long jarg1);
  public final static native long World_find_node_by_id_w(long jarg1, int jarg2);
  public final static native long World_find_node_by_label_w(long jarg1, String jarg2);
  public final static native long World_begin_nodes(long jarg1);
  public final static native long World_end_nodes(long jarg1);
  public final static native long World_find_node_by_id(long jarg1, int jarg2);
  public final static native long World_find_node_by_label(long jarg1, String jarg2);
  public final static native long World_begin_adjacent_nodes__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native long World_begin_adjacent_nodes__SWIG_1(long jarg1, long jarg2);
  public final static native long World_end_adjacent_nodes(long jarg1, long jarg2);
  public final static native long World_begin_adjacent_nodes_w__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native long World_begin_adjacent_nodes_w__SWIG_1(long jarg1, long jarg2);
  public final static native long World_end_adjacent_nodes_w(long jarg1, long jarg2);
  public final static native long World_scheduler_w(long jarg1);
  public final static native long World_scheduler(long jarg1);
  public final static native void World_add_pre_step_task(long jarg1, long jarg2);
  public final static native void World_add_post_step_task(long jarg1, long jarg2);
  public final static native long new_Neighborhood();
  public final static native void delete_Neighborhood(long jarg1);
  public final static native long new_NeighborhoodConst();
  public final static native void delete_NeighborhoodConst(long jarg1);
  public final static native String Node_WARN_HOOD_STORAGE_PARAMETER_get();
  public final static native long new_Node();
  public final static native void delete_Node(long jarg1);
  public final static native void Node_set_real_position(long jarg1, long jarg2);
  public final static native void Node_add_processor(long jarg1, long jarg2);
  public final static native void Node_set_world(long jarg1, long jarg2);
  public final static native void Node_set_id(long jarg1, int jarg2);
  public final static native void Node_set_label(long jarg1, String jarg2);
  public final static native void Node_init(long jarg1);
  public final static native void Node_reset(long jarg1);
  public final static native void Node_step(long jarg1);
  public final static native void Node_send(long jarg1, long jarg2);
  public final static native void Node_receive(long jarg1, long jarg2);
  public final static native void Node_set_movement(long jarg1, long jarg2);
  public final static native long Node_movement_w(long jarg1);
  public final static native long Node_movement(long jarg1);
  public final static native long Node_real_position(long jarg1);
  public final static native boolean Node_has_est_position(long jarg1);
  public final static native void Node_clear_est_position(long jarg1);
  public final static native long Node_est_position(long jarg1);
  public final static native void Node_set_est_position(long jarg1, long jarg2);
  public final static native void Node_sync_to_tags(long jarg1);
  public final static native void Node_sync_from_tags(long jarg1);
  public final static native int Node_id(long jarg1);
  public final static native String Node_label(long jarg1);
  public final static native int Node_simulation_round(long jarg1);
  public final static native double Node_current_time(long jarg1);
  public final static native int Node_state(long jarg1);
  public final static native long Node_world(long jarg1);
  public final static native long Node_world_w(long jarg1);
  public final static native boolean Node_is_special_node(long jarg1);
  public final static native long Node_begin_adjacent_nodes__SWIG_0(long jarg1, long jarg2);
  public final static native long Node_begin_adjacent_nodes__SWIG_1(long jarg1);
  public final static native long Node_end_adjacent_nodes(long jarg1);
  public final static native long Node_begin_adjacent_nodes_w__SWIG_0(long jarg1, long jarg2);
  public final static native long Node_begin_adjacent_nodes_w__SWIG_1(long jarg1);
  public final static native long Node_end_adjacent_nodes_w(long jarg1);
  public final static native int Node_degree__SWIG_0(long jarg1, long jarg2);
  public final static native int Node_degree__SWIG_1(long jarg1);
  public final static native long Node_neighborhood_w__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native long Node_neighborhood_w__SWIG_1(long jarg1, int jarg2);
  public final static native long Node_neighborhood__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native long Node_neighborhood__SWIG_1(long jarg1, int jarg2);
  public final static native boolean Node_equals(long jarg1, long jarg2);
  public final static native boolean Node_isDifferent(long jarg1, long jarg2);
  public final static native boolean Node_has_fixpoint(long jarg1);
  public final static native int Node_component_extension(long jarg1);
  public final static native long Node_get_adjacent_nodes__SWIG_0(long jarg1, long jarg2);
  public final static native long Node_get_adjacent_nodes__SWIG_1(long jarg1);
  public final static native long Node_get_adjacent_nodes_w__SWIG_0(long jarg1, long jarg2);
  public final static native long Node_get_adjacent_nodes_w__SWIG_1(long jarg1);
  public final static native long new_SimulationEnvironment();
  public final static native void delete_SimulationEnvironment(long jarg1);
  public final static native void SimulationEnvironment_push_parameters(long jarg1, long jarg2);
  public final static native void SimulationEnvironment_pop_parameters(long jarg1);
  public final static native void SimulationEnvironment_add_parameters_low_prio(long jarg1, long jarg2);
  public final static native void SimulationEnvironment_add_parameters_high_prio(long jarg1, long jarg2);
  public final static native void SimulationEnvironment_add_parameter_low_prio(long jarg1, String jarg2, String jarg3);
  public final static native void SimulationEnvironment_add_parameter_high_prio(long jarg1, String jarg2, String jarg3);
  public final static native String SimulationEnvironment_required_string_param(long jarg1, String jarg2);
  public final static native String SimulationEnvironment_optional_string_param__SWIG_0(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native String SimulationEnvironment_optional_string_param__SWIG_1(long jarg1, String jarg2, String jarg3);
  public final static native int SimulationEnvironment_required_int_param(long jarg1, String jarg2);
  public final static native int SimulationEnvironment_optional_int_param__SWIG_0(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int SimulationEnvironment_optional_int_param__SWIG_1(long jarg1, String jarg2, int jarg3);
  public final static native double SimulationEnvironment_required_double_param(long jarg1, String jarg2);
  public final static native double SimulationEnvironment_optional_double_param__SWIG_0(long jarg1, String jarg2, double jarg3, long jarg4);
  public final static native double SimulationEnvironment_optional_double_param__SWIG_1(long jarg1, String jarg2, double jarg3);
  public final static native boolean SimulationEnvironment_required_bool_param(long jarg1, String jarg2);
  public final static native boolean SimulationEnvironment_optional_bool_param__SWIG_0(long jarg1, String jarg2, boolean jarg3, long jarg4);
  public final static native boolean SimulationEnvironment_optional_bool_param__SWIG_1(long jarg1, String jarg2, boolean jarg3);
  public final static native boolean SimulationEnvironment_find_param(long jarg1, String jarg2, long jarg3);
  public final static native long new_SimulationController();
  public final static native void delete_SimulationController(long jarg1);
  public final static native long SimulationController_environment(long jarg1);
  public final static native long SimulationController_environment_w(long jarg1);
  public final static native long SimulationController_simulation_task_keeper(long jarg1);
  public final static native long SimulationController_simulation_task_keeper_w(long jarg1);
  public final static native long SimulationController_processor_keeper(long jarg1);
  public final static native long SimulationController_processor_keeper_w(long jarg1);
  public final static native long SimulationController_random_variable_keeper(long jarg1);
  public final static native long SimulationController_random_variable_keeper_w(long jarg1);
  public final static native long SimulationController_edge_model_keeper(long jarg1);
  public final static native long SimulationController_edge_model_keeper_w(long jarg1);
  public final static native long SimulationController_transmission_model_keeper(long jarg1);
  public final static native long SimulationController_transmission_model_keeper_w(long jarg1);
  public final static native long SimulationController_communication_model_keeper(long jarg1);
  public final static native long SimulationController_communication_model_keeper_w(long jarg1);
  public final static native long SimulationController_distance_estimate_keeper(long jarg1);
  public final static native long SimulationController_distance_estimate_keeper_w(long jarg1);
  public final static native long SimulationController_tag_factory_keeper(long jarg1);
  public final static native long SimulationController_tag_factory_keeper_w(long jarg1);
  public final static native boolean SimulationController_has_world(long jarg1);
  public final static native long SimulationController_world_w(long jarg1);
  public final static native long SimulationController_world(long jarg1);
  public final static native void SimulationController_set_world(long jarg1, long jarg2);
  public final static native void SimulationController_add_keeper(long jarg1, long jarg2);
  public final static native long new_ShawnSimulationController();
  public final static native void delete_ShawnSimulationController(long jarg1);
  public final static native String ShawnSimulationController_WHITE_SPACE_get();
  public final static native void ShawnSimulationController_execute_command_line(long jarg1, String jarg2);
  public final static native void ShawnSimulationController_execute_task(long jarg1, long jarg2);
  public final static native long EventScheduler_NO_EVENT_get();
  public final static native long new_EventScheduler();
  public final static native void delete_EventScheduler(long jarg1);
  public final static native long EventScheduler_new_event(long jarg1, long jarg2, double jarg3, long jarg4);
  public final static native void EventScheduler_delete_event(long jarg1, long jarg2);
  public final static native void EventScheduler_move_event(long jarg1, long jarg2, double jarg3);
  public final static native double EventScheduler_current_time(long jarg1);
  public final static native double EventScheduler_next_event_time(long jarg1);
  public final static native boolean EventScheduler_empty(long jarg1);
  public final static native long EventScheduler_front_w(long jarg1);
  public final static native long EventScheduler_front(long jarg1);
  public final static native void EventScheduler_playback(long jarg1, double jarg2);
  public final static native void EventScheduler_clear__SWIG_0(long jarg1, double jarg2);
  public final static native void EventScheduler_clear__SWIG_1(long jarg1);
  public final static native long master_init();
  public final static native long SWIGTagContainerUpcast(long jarg1);
  public final static native long SWIGTagUpcast(long jarg1);
  public final static native long SWIGKeeperManagedUpcast(long jarg1);
  public final static native long SWIGSimulationTaskUpcast(long jarg1);
  public final static native long SWIGNodeMovementUpcast(long jarg1);
  public final static native long SWIGMessageUpcast(long jarg1);
  public final static native long SWIGProcessorUpcast(long jarg1);
  public final static native long SWIGWorldUpcast(long jarg1);
  public final static native long SWIGNeighborhoodUpcast(long jarg1);
  public final static native long SWIGNeighborhoodConstUpcast(long jarg1);
  public final static native long SWIGNodeUpcast(long jarg1);
  public final static native long SWIGSimulationEnvironmentUpcast(long jarg1);
  public final static native long SWIGShawnSimulationControllerUpcast(long jarg1);
}
