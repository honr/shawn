/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.swarmnet.shawn;

public class Tag extends TagContainer {
  private long swigCPtr;

  protected Tag(long cPtr, boolean cMemoryOwn) {
    super(ShawnJNI.SWIGTagUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Tag obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      ShawnJNI.delete_Tag(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public String name() {
    return ShawnJNI.Tag_name(swigCPtr);
  }

  public boolean is_locked() {
    return ShawnJNI.Tag_is_locked(swigCPtr);
  }

  public void lock() {
    ShawnJNI.Tag_lock(swigCPtr);
  }

  public void unlock() {
    ShawnJNI.Tag_unlock(swigCPtr);
  }

  public String type_identifier() {
    return ShawnJNI.Tag_type_identifier(swigCPtr);
  }

  public String encoded_content() {
    return ShawnJNI.Tag_encoded_content(swigCPtr);
  }

  public void set_persistency(boolean arg0) {
    ShawnJNI.Tag_set_persistency(swigCPtr, arg0);
  }

  public boolean is_persistent() {
    return ShawnJNI.Tag_is_persistent(swigCPtr);
  }

  public const_entry_iterator begin_entries() {
    return new const_entry_iterator(ShawnJNI.Tag_begin_entries(swigCPtr), true);
  }

  public const_entry_iterator end_entries() {
    return new const_entry_iterator(ShawnJNI.Tag_end_entries(swigCPtr), true);
  }

  public void add_indexed_entry(String index, String value) {
    ShawnJNI.Tag_add_indexed_entry(swigCPtr, index, value);
  }

  public void add_value_entry(String value) {
    ShawnJNI.Tag_add_value_entry(swigCPtr, value);
  }

}
