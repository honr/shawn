/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.swarmnet.shawn;

public class Vec {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Vec(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Vec obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      ShawnJNI.delete_Vec(swigCPtr);
    }
    swigCPtr = 0;
  }

  public Vec(Vec p) {
    this(ShawnJNI.new_Vec__SWIG_0(Vec.getCPtr(p)), true);
  }

  public Vec(double x, double y, double z) {
    this(ShawnJNI.new_Vec__SWIG_1(x, y, z), true);
  }

  public Vec(double x, double y) {
    this(ShawnJNI.new_Vec__SWIG_2(x, y), true);
  }

  public Vec(double x) {
    this(ShawnJNI.new_Vec__SWIG_3(x), true);
  }

  public Vec() {
    this(ShawnJNI.new_Vec__SWIG_4(), true);
  }

  public double x() {
    return ShawnJNI.Vec_x(swigCPtr);
  }

  public double y() {
    return ShawnJNI.Vec_y(swigCPtr);
  }

  public double z() {
    return ShawnJNI.Vec_z(swigCPtr);
  }

  public Vec subtract(Vec p) {
    return new Vec(ShawnJNI.Vec_subtract(swigCPtr, Vec.getCPtr(p)), true);
  }

  public Vec add(Vec p) {
    return new Vec(ShawnJNI.Vec_add(swigCPtr, Vec.getCPtr(p)), true);
  }

  public Vec subtractAssign(Vec p) {
    return new Vec(ShawnJNI.Vec_subtractAssign(swigCPtr, Vec.getCPtr(p)), false);
  }

  public Vec addAssign(Vec p) {
    return new Vec(ShawnJNI.Vec_addAssign(swigCPtr, Vec.getCPtr(p)), false);
  }

  public Vec mult(double f) {
    return new Vec(ShawnJNI.Vec_mult__SWIG_0(swigCPtr, f), true);
  }

  public Vec div(double f) {
    return new Vec(ShawnJNI.Vec_div(swigCPtr, f), true);
  }

  public Vec multAssign(double f) {
    return new Vec(ShawnJNI.Vec_multAssign(swigCPtr, f), false);
  }

  public Vec divAssign(double f) {
    return new Vec(ShawnJNI.Vec_divAssign(swigCPtr, f), false);
  }

  public boolean equals(Vec p) {
    return ShawnJNI.Vec_equals(swigCPtr, Vec.getCPtr(p));
  }

  public boolean isDifferent(Vec p) {
    return ShawnJNI.Vec_isDifferent(swigCPtr, Vec.getCPtr(p));
  }

  public Vec assign(Vec p) {
    return new Vec(ShawnJNI.Vec_assign(swigCPtr, Vec.getCPtr(p)), false);
  }

  public double mult(Vec p) {
    return ShawnJNI.Vec_mult__SWIG_1(swigCPtr, Vec.getCPtr(p));
  }

  public double euclidean_norm() {
    return ShawnJNI.Vec_euclidean_norm(swigCPtr);
  }

}
